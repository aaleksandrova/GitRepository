#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinSostAnalitic
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FinSostFL")]
	public partial class FinSostDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdress(Adress instance);
    partial void UpdateAdress(Adress instance);
    partial void DeleteAdress(Adress instance);
    partial void InsertAgeOfBorrower(AgeOfBorrower instance);
    partial void UpdateAgeOfBorrower(AgeOfBorrower instance);
    partial void DeleteAgeOfBorrower(AgeOfBorrower instance);
    partial void InsertByuroeCreditHistory(ByuroeCreditHistory instance);
    partial void UpdateByuroeCreditHistory(ByuroeCreditHistory instance);
    partial void DeleteByuroeCreditHistory(ByuroeCreditHistory instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCreditHistory(CreditHistory instance);
    partial void UpdateCreditHistory(CreditHistory instance);
    partial void DeleteCreditHistory(CreditHistory instance);
    partial void InsertExistanceOfDeposite(ExistanceOfDeposite instance);
    partial void UpdateExistanceOfDeposite(ExistanceOfDeposite instance);
    partial void DeleteExistanceOfDeposite(ExistanceOfDeposite instance);
    partial void InsertExpirienceAtLastPlaceOfWork(ExpirienceAtLastPlaceOfWork instance);
    partial void UpdateExpirienceAtLastPlaceOfWork(ExpirienceAtLastPlaceOfWork instance);
    partial void DeleteExpirienceAtLastPlaceOfWork(ExpirienceAtLastPlaceOfWork instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertFamilyComposition(FamilyComposition instance);
    partial void UpdateFamilyComposition(FamilyComposition instance);
    partial void DeleteFamilyComposition(FamilyComposition instance);
    partial void InsertFinConditionOfBorrowersFamily(FinConditionOfBorrowersFamily instance);
    partial void UpdateFinConditionOfBorrowersFamily(FinConditionOfBorrowersFamily instance);
    partial void DeleteFinConditionOfBorrowersFamily(FinConditionOfBorrowersFamily instance);
    partial void InsertFinData(FinData instance);
    partial void UpdateFinData(FinData instance);
    partial void DeleteFinData(FinData instance);
    partial void InsertKlass(Klass instance);
    partial void UpdateKlass(Klass instance);
    partial void DeleteKlass(Klass instance);
    partial void InsertKlassHistory(KlassHistory instance);
    partial void UpdateKlassHistory(KlassHistory instance);
    partial void DeleteKlassHistory(KlassHistory instance);
    partial void InsertLevelOfSequrity(LevelOfSequrity instance);
    partial void UpdateLevelOfSequrity(LevelOfSequrity instance);
    partial void DeleteLevelOfSequrity(LevelOfSequrity instance);
    partial void InsertPaymentCurrentCredit(PaymentCurrentCredit instance);
    partial void UpdatePaymentCurrentCredit(PaymentCurrentCredit instance);
    partial void DeletePaymentCurrentCredit(PaymentCurrentCredit instance);
    partial void InsertPurpose(Purpose instance);
    partial void UpdatePurpose(Purpose instance);
    partial void DeletePurpose(Purpose instance);
    partial void InsertRatioLoanPaymentToNetIncome(RatioLoanPaymentToNetIncome instance);
    partial void UpdateRatioLoanPaymentToNetIncome(RatioLoanPaymentToNetIncome instance);
    partial void DeleteRatioLoanPaymentToNetIncome(RatioLoanPaymentToNetIncome instance);
    partial void InsertReputationOfBorrower(ReputationOfBorrower instance);
    partial void UpdateReputationOfBorrower(ReputationOfBorrower instance);
    partial void DeleteReputationOfBorrower(ReputationOfBorrower instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertSequrity(Sequrity instance);
    partial void UpdateSequrity(Sequrity instance);
    partial void DeleteSequrity(Sequrity instance);
    partial void InsertTermOfLoan(TermOfLoan instance);
    partial void UpdateTermOfLoan(TermOfLoan instance);
    partial void DeleteTermOfLoan(TermOfLoan instance);
    partial void InsertTotalFamilyIncome(TotalFamilyIncome instance);
    partial void UpdateTotalFamilyIncome(TotalFamilyIncome instance);
    partial void DeleteTotalFamilyIncome(TotalFamilyIncome instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCredit(Credit instance);
    partial void UpdateCredit(Credit instance);
    partial void DeleteCredit(Credit instance);
    partial void InsertValueExchange(ValueExchange instance);
    partial void UpdateValueExchange(ValueExchange instance);
    partial void DeleteValueExchange(ValueExchange instance);
    partial void InsertOcenka(Ocenka instance);
    partial void UpdateOcenka(Ocenka instance);
    partial void DeleteOcenka(Ocenka instance);
    #endregion
		
		public FinSostDataContext() : 
				base(global::FinSostAnalitic.Properties.Settings.Default.FinSostFLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FinSostDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinSostDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinSostDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinSostDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adress> Adresses
		{
			get
			{
				return this.GetTable<Adress>();
			}
		}
		
		public System.Data.Linq.Table<AgeOfBorrower> AgeOfBorrowers
		{
			get
			{
				return this.GetTable<AgeOfBorrower>();
			}
		}
		
		public System.Data.Linq.Table<ByuroeCreditHistory> ByuroeCreditHistories
		{
			get
			{
				return this.GetTable<ByuroeCreditHistory>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<CreditHistory> CreditHistories
		{
			get
			{
				return this.GetTable<CreditHistory>();
			}
		}
		
		public System.Data.Linq.Table<ExistanceOfDeposite> ExistanceOfDeposites
		{
			get
			{
				return this.GetTable<ExistanceOfDeposite>();
			}
		}
		
		public System.Data.Linq.Table<ExpirienceAtLastPlaceOfWork> ExpirienceAtLastPlaceOfWorks
		{
			get
			{
				return this.GetTable<ExpirienceAtLastPlaceOfWork>();
			}
		}
		
		public System.Data.Linq.Table<Family> Families
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<FamilyComposition> FamilyCompositions
		{
			get
			{
				return this.GetTable<FamilyComposition>();
			}
		}
		
		public System.Data.Linq.Table<FinConditionOfBorrowersFamily> FinConditionOfBorrowersFamilies
		{
			get
			{
				return this.GetTable<FinConditionOfBorrowersFamily>();
			}
		}
		
		public System.Data.Linq.Table<FinData> FinDatas
		{
			get
			{
				return this.GetTable<FinData>();
			}
		}
		
		public System.Data.Linq.Table<Klass> Klasses
		{
			get
			{
				return this.GetTable<Klass>();
			}
		}
		
		public System.Data.Linq.Table<KlassHistory> KlassHistories
		{
			get
			{
				return this.GetTable<KlassHistory>();
			}
		}
		
		public System.Data.Linq.Table<LevelOfSequrity> LevelOfSequrities
		{
			get
			{
				return this.GetTable<LevelOfSequrity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCurrentCredit> PaymentCurrentCredits
		{
			get
			{
				return this.GetTable<PaymentCurrentCredit>();
			}
		}
		
		public System.Data.Linq.Table<Purpose> Purposes
		{
			get
			{
				return this.GetTable<Purpose>();
			}
		}
		
		public System.Data.Linq.Table<RatioLoanPaymentToNetIncome> RatioLoanPaymentToNetIncomes
		{
			get
			{
				return this.GetTable<RatioLoanPaymentToNetIncome>();
			}
		}
		
		public System.Data.Linq.Table<ReputationOfBorrower> ReputationOfBorrowers
		{
			get
			{
				return this.GetTable<ReputationOfBorrower>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Sequrity> Sequrities
		{
			get
			{
				return this.GetTable<Sequrity>();
			}
		}
		
		public System.Data.Linq.Table<TermOfLoan> TermOfLoans
		{
			get
			{
				return this.GetTable<TermOfLoan>();
			}
		}
		
		public System.Data.Linq.Table<TotalFamilyIncome> TotalFamilyIncomes
		{
			get
			{
				return this.GetTable<TotalFamilyIncome>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Credit> Credits
		{
			get
			{
				return this.GetTable<Credit>();
			}
		}
		
		public System.Data.Linq.Table<ValueExchange> ValueExchanges
		{
			get
			{
				return this.GetTable<ValueExchange>();
			}
		}
		
		public System.Data.Linq.Table<Ocenka> Ocenkas
		{
			get
			{
				return this.GetTable<Ocenka>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adress")]
	public partial class Adress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private string _Country;
		
		private string _Area;
		
		private string _City;
		
		private string _Street;
		
		private string _House;
		
		private string _Appartment;
		
		private System.Nullable<int> _ZIPCode;
		
		private System.Nullable<int> _FlagUrOrFact;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnAppartmentChanging(string value);
    partial void OnAppartmentChanged();
    partial void OnZIPCodeChanging(System.Nullable<int> value);
    partial void OnZIPCodeChanged();
    partial void OnFlagUrOrFactChanging(System.Nullable<int> value);
    partial void OnFlagUrOrFactChanged();
    #endregion
		
		public Adress()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appartment", DbType="NVarChar(255)")]
		public string Appartment
		{
			get
			{
				return this._Appartment;
			}
			set
			{
				if ((this._Appartment != value))
				{
					this.OnAppartmentChanging(value);
					this.SendPropertyChanging();
					this._Appartment = value;
					this.SendPropertyChanged("Appartment");
					this.OnAppartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIPCode", DbType="Int")]
		public System.Nullable<int> ZIPCode
		{
			get
			{
				return this._ZIPCode;
			}
			set
			{
				if ((this._ZIPCode != value))
				{
					this.OnZIPCodeChanging(value);
					this.SendPropertyChanging();
					this._ZIPCode = value;
					this.SendPropertyChanged("ZIPCode");
					this.OnZIPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagUrOrFact", DbType="Int")]
		public System.Nullable<int> FlagUrOrFact
		{
			get
			{
				return this._FlagUrOrFact;
			}
			set
			{
				if ((this._FlagUrOrFact != value))
				{
					this.OnFlagUrOrFactChanging(value);
					this.SendPropertyChanging();
					this._FlagUrOrFact = value;
					this.SendPropertyChanged("FlagUrOrFact");
					this.OnFlagUrOrFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Adress", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Adresses.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Adresses.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgeOfBorrower")]
	public partial class AgeOfBorrower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public AgeOfBorrower()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ByuroeCreditHistory")]
	public partial class ByuroeCreditHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public ByuroeCreditHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _INN;
		
		private string _Residantance;
		
		private System.DateTime _DateBirsday;
		
		private string _WhereWork;
		
		private string _Position;
		
		private string _Mariied;
		
		private EntitySet<Adress> _Adresses;
		
		private EntitySet<Family> _Families;
		
		private EntitySet<FinData> _FinDatas;
		
		private EntitySet<KlassHistory> _KlassHistories;
		
		private EntitySet<Credit> _Credits;
		
		private EntitySet<Ocenka> _Ocenkas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnResidantanceChanging(string value);
    partial void OnResidantanceChanged();
    partial void OnDateBirsdayChanging(System.DateTime value);
    partial void OnDateBirsdayChanged();
    partial void OnWhereWorkChanging(string value);
    partial void OnWhereWorkChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnMariiedChanging(string value);
    partial void OnMariiedChanged();
    #endregion
		
		public Client()
		{
			this._Adresses = new EntitySet<Adress>(new Action<Adress>(this.attach_Adresses), new Action<Adress>(this.detach_Adresses));
			this._Families = new EntitySet<Family>(new Action<Family>(this.attach_Families), new Action<Family>(this.detach_Families));
			this._FinDatas = new EntitySet<FinData>(new Action<FinData>(this.attach_FinDatas), new Action<FinData>(this.detach_FinDatas));
			this._KlassHistories = new EntitySet<KlassHistory>(new Action<KlassHistory>(this.attach_KlassHistories), new Action<KlassHistory>(this.detach_KlassHistories));
			this._Credits = new EntitySet<Credit>(new Action<Credit>(this.attach_Credits), new Action<Credit>(this.detach_Credits));
			this._Ocenkas = new EntitySet<Ocenka>(new Action<Ocenka>(this.attach_Ocenkas), new Action<Ocenka>(this.detach_Ocenkas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Residantance", DbType="NVarChar(255)")]
		public string Residantance
		{
			get
			{
				return this._Residantance;
			}
			set
			{
				if ((this._Residantance != value))
				{
					this.OnResidantanceChanging(value);
					this.SendPropertyChanging();
					this._Residantance = value;
					this.SendPropertyChanged("Residantance");
					this.OnResidantanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBirsday", DbType="DateTime NOT NULL")]
		public System.DateTime DateBirsday
		{
			get
			{
				return this._DateBirsday;
			}
			set
			{
				if ((this._DateBirsday != value))
				{
					this.OnDateBirsdayChanging(value);
					this.SendPropertyChanging();
					this._DateBirsday = value;
					this.SendPropertyChanged("DateBirsday");
					this.OnDateBirsdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhereWork", DbType="NVarChar(255)")]
		public string WhereWork
		{
			get
			{
				return this._WhereWork;
			}
			set
			{
				if ((this._WhereWork != value))
				{
					this.OnWhereWorkChanging(value);
					this.SendPropertyChanging();
					this._WhereWork = value;
					this.SendPropertyChanged("WhereWork");
					this.OnWhereWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(255)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mariied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Mariied
		{
			get
			{
				return this._Mariied;
			}
			set
			{
				if ((this._Mariied != value))
				{
					this.OnMariiedChanging(value);
					this.SendPropertyChanging();
					this._Mariied = value;
					this.SendPropertyChanged("Mariied");
					this.OnMariiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Adress", Storage="_Adresses", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<Adress> Adresses
		{
			get
			{
				return this._Adresses;
			}
			set
			{
				this._Adresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Family", Storage="_Families", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<Family> Families
		{
			get
			{
				return this._Families;
			}
			set
			{
				this._Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_FinData", Storage="_FinDatas", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<FinData> FinDatas
		{
			get
			{
				return this._FinDatas;
			}
			set
			{
				this._FinDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_KlassHistory", Storage="_KlassHistories", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<KlassHistory> KlassHistories
		{
			get
			{
				return this._KlassHistories;
			}
			set
			{
				this._KlassHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Credit", Storage="_Credits", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<Credit> Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				this._Credits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Ocenka", Storage="_Ocenkas", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<Ocenka> Ocenkas
		{
			get
			{
				return this._Ocenkas;
			}
			set
			{
				this._Ocenkas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adresses(Adress entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Adresses(Adress entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_FinDatas(FinData entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_FinDatas(FinData entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_KlassHistories(KlassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_KlassHistories(KlassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditHistory")]
	public partial class CreditHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public CreditHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExistanceOfDeposite")]
	public partial class ExistanceOfDeposite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public ExistanceOfDeposite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpirienceAtLastPlaceOfWork")]
	public partial class ExpirienceAtLastPlaceOfWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public ExpirienceAtLastPlaceOfWork()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private string _Name;
		
		private System.DateTime _DateBirsday;
		
		private string _WhoIsForClient;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateBirsdayChanging(System.DateTime value);
    partial void OnDateBirsdayChanged();
    partial void OnWhoIsForClientChanging(string value);
    partial void OnWhoIsForClientChanged();
    #endregion
		
		public Family()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBirsday", DbType="DateTime NOT NULL")]
		public System.DateTime DateBirsday
		{
			get
			{
				return this._DateBirsday;
			}
			set
			{
				if ((this._DateBirsday != value))
				{
					this.OnDateBirsdayChanging(value);
					this.SendPropertyChanging();
					this._DateBirsday = value;
					this.SendPropertyChanged("DateBirsday");
					this.OnDateBirsdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsForClient", DbType="NVarChar(255)")]
		public string WhoIsForClient
		{
			get
			{
				return this._WhoIsForClient;
			}
			set
			{
				if ((this._WhoIsForClient != value))
				{
					this.OnWhoIsForClientChanging(value);
					this.SendPropertyChanging();
					this._WhoIsForClient = value;
					this.SendPropertyChanged("WhoIsForClient");
					this.OnWhoIsForClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Family", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Families.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Families.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyComposition")]
	public partial class FamilyComposition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public FamilyComposition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinConditionOfBorrowersFamily")]
	public partial class FinConditionOfBorrowersFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public FinConditionOfBorrowersFamily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinData")]
	public partial class FinData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private System.DateTime _DateOcenki;
		
		private double _Salary1;
		
		private double _Salary2;
		
		private double _Salary3;
		
		private double _SalaryAv;
		
		private double _OtherIncome1;
		
		private double _OtherIncome2;
		
		private double _OtherIncome3;
		
		private double _OtherIncomeAv;
		
		private double _TotalIncome1;
		
		private double _TotalIncome2;
		
		private double _TotalIncome3;
		
		private double _TotalIncomeAv;
		
		private double _Outcome11;
		
		private double _Outcome12;
		
		private double _Outcome13;
		
		private double _Outcome1Av;
		
		private double _Outcome21;
		
		private double _Outcome22;
		
		private double _Outcome23;
		
		private double _Outcome2Av;
		
		private double _Outcome31;
		
		private double _Outcome32;
		
		private double _Outcome33;
		
		private double _Outcome3Av;
		
		private double _Outcome41;
		
		private double _Outcome42;
		
		private double _Outcome43;
		
		private double _Outcome4Av;
		
		private double _TotalOutcome1;
		
		private double _TotalOutcome2;
		
		private double _TotalOutcome3;
		
		private double _TotalOutcomeSr;
		
		private double _TotalNetIncome1;
		
		private double _TotalNetIncome2;
		
		private double _TotalNetIncome3;
		
		private double _TotalNetIncomeAv;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnDateOcenkiChanging(System.DateTime value);
    partial void OnDateOcenkiChanged();
    partial void OnSalary1Changing(double value);
    partial void OnSalary1Changed();
    partial void OnSalary2Changing(double value);
    partial void OnSalary2Changed();
    partial void OnSalary3Changing(double value);
    partial void OnSalary3Changed();
    partial void OnSalaryAvChanging(double value);
    partial void OnSalaryAvChanged();
    partial void OnOtherIncome1Changing(double value);
    partial void OnOtherIncome1Changed();
    partial void OnOtherIncome2Changing(double value);
    partial void OnOtherIncome2Changed();
    partial void OnOtherIncome3Changing(double value);
    partial void OnOtherIncome3Changed();
    partial void OnOtherIncomeAvChanging(double value);
    partial void OnOtherIncomeAvChanged();
    partial void OnTotalIncome1Changing(double value);
    partial void OnTotalIncome1Changed();
    partial void OnTotalIncome2Changing(double value);
    partial void OnTotalIncome2Changed();
    partial void OnTotalIncome3Changing(double value);
    partial void OnTotalIncome3Changed();
    partial void OnTotalIncomeAvChanging(double value);
    partial void OnTotalIncomeAvChanged();
    partial void OnOutcome11Changing(double value);
    partial void OnOutcome11Changed();
    partial void OnOutcome12Changing(double value);
    partial void OnOutcome12Changed();
    partial void OnOutcome13Changing(double value);
    partial void OnOutcome13Changed();
    partial void OnOutcome1AvChanging(double value);
    partial void OnOutcome1AvChanged();
    partial void OnOutcome21Changing(double value);
    partial void OnOutcome21Changed();
    partial void OnOutcome22Changing(double value);
    partial void OnOutcome22Changed();
    partial void OnOutcome23Changing(double value);
    partial void OnOutcome23Changed();
    partial void OnOutcome2AvChanging(double value);
    partial void OnOutcome2AvChanged();
    partial void OnOutcome31Changing(double value);
    partial void OnOutcome31Changed();
    partial void OnOutcome32Changing(double value);
    partial void OnOutcome32Changed();
    partial void OnOutcome33Changing(double value);
    partial void OnOutcome33Changed();
    partial void OnOutcome3AvChanging(double value);
    partial void OnOutcome3AvChanged();
    partial void OnOutcome41Changing(double value);
    partial void OnOutcome41Changed();
    partial void OnOutcome42Changing(double value);
    partial void OnOutcome42Changed();
    partial void OnOutcome43Changing(double value);
    partial void OnOutcome43Changed();
    partial void OnOutcome4AvChanging(double value);
    partial void OnOutcome4AvChanged();
    partial void OnTotalOutcome1Changing(double value);
    partial void OnTotalOutcome1Changed();
    partial void OnTotalOutcome2Changing(double value);
    partial void OnTotalOutcome2Changed();
    partial void OnTotalOutcome3Changing(double value);
    partial void OnTotalOutcome3Changed();
    partial void OnTotalOutcomeSrChanging(double value);
    partial void OnTotalOutcomeSrChanged();
    partial void OnTotalNetIncome1Changing(double value);
    partial void OnTotalNetIncome1Changed();
    partial void OnTotalNetIncome2Changing(double value);
    partial void OnTotalNetIncome2Changed();
    partial void OnTotalNetIncome3Changing(double value);
    partial void OnTotalNetIncome3Changed();
    partial void OnTotalNetIncomeAvChanging(double value);
    partial void OnTotalNetIncomeAvChanged();
    #endregion
		
		public FinData()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOcenki", DbType="DateTime NOT NULL")]
		public System.DateTime DateOcenki
		{
			get
			{
				return this._DateOcenki;
			}
			set
			{
				if ((this._DateOcenki != value))
				{
					this.OnDateOcenkiChanging(value);
					this.SendPropertyChanging();
					this._DateOcenki = value;
					this.SendPropertyChanged("DateOcenki");
					this.OnDateOcenkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary1", DbType="Float NOT NULL")]
		public double Salary1
		{
			get
			{
				return this._Salary1;
			}
			set
			{
				if ((this._Salary1 != value))
				{
					this.OnSalary1Changing(value);
					this.SendPropertyChanging();
					this._Salary1 = value;
					this.SendPropertyChanged("Salary1");
					this.OnSalary1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary2", DbType="Float NOT NULL")]
		public double Salary2
		{
			get
			{
				return this._Salary2;
			}
			set
			{
				if ((this._Salary2 != value))
				{
					this.OnSalary2Changing(value);
					this.SendPropertyChanging();
					this._Salary2 = value;
					this.SendPropertyChanged("Salary2");
					this.OnSalary2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary3", DbType="Float NOT NULL")]
		public double Salary3
		{
			get
			{
				return this._Salary3;
			}
			set
			{
				if ((this._Salary3 != value))
				{
					this.OnSalary3Changing(value);
					this.SendPropertyChanging();
					this._Salary3 = value;
					this.SendPropertyChanged("Salary3");
					this.OnSalary3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryAv", DbType="Float NOT NULL")]
		public double SalaryAv
		{
			get
			{
				return this._SalaryAv;
			}
			set
			{
				if ((this._SalaryAv != value))
				{
					this.OnSalaryAvChanging(value);
					this.SendPropertyChanging();
					this._SalaryAv = value;
					this.SendPropertyChanged("SalaryAv");
					this.OnSalaryAvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome1", DbType="Float NOT NULL")]
		public double OtherIncome1
		{
			get
			{
				return this._OtherIncome1;
			}
			set
			{
				if ((this._OtherIncome1 != value))
				{
					this.OnOtherIncome1Changing(value);
					this.SendPropertyChanging();
					this._OtherIncome1 = value;
					this.SendPropertyChanged("OtherIncome1");
					this.OnOtherIncome1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome2", DbType="Float NOT NULL")]
		public double OtherIncome2
		{
			get
			{
				return this._OtherIncome2;
			}
			set
			{
				if ((this._OtherIncome2 != value))
				{
					this.OnOtherIncome2Changing(value);
					this.SendPropertyChanging();
					this._OtherIncome2 = value;
					this.SendPropertyChanged("OtherIncome2");
					this.OnOtherIncome2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome3", DbType="Float NOT NULL")]
		public double OtherIncome3
		{
			get
			{
				return this._OtherIncome3;
			}
			set
			{
				if ((this._OtherIncome3 != value))
				{
					this.OnOtherIncome3Changing(value);
					this.SendPropertyChanging();
					this._OtherIncome3 = value;
					this.SendPropertyChanged("OtherIncome3");
					this.OnOtherIncome3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncomeAv", DbType="Float NOT NULL")]
		public double OtherIncomeAv
		{
			get
			{
				return this._OtherIncomeAv;
			}
			set
			{
				if ((this._OtherIncomeAv != value))
				{
					this.OnOtherIncomeAvChanging(value);
					this.SendPropertyChanging();
					this._OtherIncomeAv = value;
					this.SendPropertyChanged("OtherIncomeAv");
					this.OnOtherIncomeAvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncome1", DbType="Float NOT NULL")]
		public double TotalIncome1
		{
			get
			{
				return this._TotalIncome1;
			}
			set
			{
				if ((this._TotalIncome1 != value))
				{
					this.OnTotalIncome1Changing(value);
					this.SendPropertyChanging();
					this._TotalIncome1 = value;
					this.SendPropertyChanged("TotalIncome1");
					this.OnTotalIncome1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncome2", DbType="Float NOT NULL")]
		public double TotalIncome2
		{
			get
			{
				return this._TotalIncome2;
			}
			set
			{
				if ((this._TotalIncome2 != value))
				{
					this.OnTotalIncome2Changing(value);
					this.SendPropertyChanging();
					this._TotalIncome2 = value;
					this.SendPropertyChanged("TotalIncome2");
					this.OnTotalIncome2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncome3", DbType="Float NOT NULL")]
		public double TotalIncome3
		{
			get
			{
				return this._TotalIncome3;
			}
			set
			{
				if ((this._TotalIncome3 != value))
				{
					this.OnTotalIncome3Changing(value);
					this.SendPropertyChanging();
					this._TotalIncome3 = value;
					this.SendPropertyChanged("TotalIncome3");
					this.OnTotalIncome3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncomeAv", DbType="Float NOT NULL")]
		public double TotalIncomeAv
		{
			get
			{
				return this._TotalIncomeAv;
			}
			set
			{
				if ((this._TotalIncomeAv != value))
				{
					this.OnTotalIncomeAvChanging(value);
					this.SendPropertyChanging();
					this._TotalIncomeAv = value;
					this.SendPropertyChanged("TotalIncomeAv");
					this.OnTotalIncomeAvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome11", DbType="Float NOT NULL")]
		public double Outcome11
		{
			get
			{
				return this._Outcome11;
			}
			set
			{
				if ((this._Outcome11 != value))
				{
					this.OnOutcome11Changing(value);
					this.SendPropertyChanging();
					this._Outcome11 = value;
					this.SendPropertyChanged("Outcome11");
					this.OnOutcome11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome12", DbType="Float NOT NULL")]
		public double Outcome12
		{
			get
			{
				return this._Outcome12;
			}
			set
			{
				if ((this._Outcome12 != value))
				{
					this.OnOutcome12Changing(value);
					this.SendPropertyChanging();
					this._Outcome12 = value;
					this.SendPropertyChanged("Outcome12");
					this.OnOutcome12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome13", DbType="Float NOT NULL")]
		public double Outcome13
		{
			get
			{
				return this._Outcome13;
			}
			set
			{
				if ((this._Outcome13 != value))
				{
					this.OnOutcome13Changing(value);
					this.SendPropertyChanging();
					this._Outcome13 = value;
					this.SendPropertyChanged("Outcome13");
					this.OnOutcome13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome1Av", DbType="Float NOT NULL")]
		public double Outcome1Av
		{
			get
			{
				return this._Outcome1Av;
			}
			set
			{
				if ((this._Outcome1Av != value))
				{
					this.OnOutcome1AvChanging(value);
					this.SendPropertyChanging();
					this._Outcome1Av = value;
					this.SendPropertyChanged("Outcome1Av");
					this.OnOutcome1AvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome21", DbType="Float NOT NULL")]
		public double Outcome21
		{
			get
			{
				return this._Outcome21;
			}
			set
			{
				if ((this._Outcome21 != value))
				{
					this.OnOutcome21Changing(value);
					this.SendPropertyChanging();
					this._Outcome21 = value;
					this.SendPropertyChanged("Outcome21");
					this.OnOutcome21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome22", DbType="Float NOT NULL")]
		public double Outcome22
		{
			get
			{
				return this._Outcome22;
			}
			set
			{
				if ((this._Outcome22 != value))
				{
					this.OnOutcome22Changing(value);
					this.SendPropertyChanging();
					this._Outcome22 = value;
					this.SendPropertyChanged("Outcome22");
					this.OnOutcome22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome23", DbType="Float NOT NULL")]
		public double Outcome23
		{
			get
			{
				return this._Outcome23;
			}
			set
			{
				if ((this._Outcome23 != value))
				{
					this.OnOutcome23Changing(value);
					this.SendPropertyChanging();
					this._Outcome23 = value;
					this.SendPropertyChanged("Outcome23");
					this.OnOutcome23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome2Av", DbType="Float NOT NULL")]
		public double Outcome2Av
		{
			get
			{
				return this._Outcome2Av;
			}
			set
			{
				if ((this._Outcome2Av != value))
				{
					this.OnOutcome2AvChanging(value);
					this.SendPropertyChanging();
					this._Outcome2Av = value;
					this.SendPropertyChanged("Outcome2Av");
					this.OnOutcome2AvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome31", DbType="Float NOT NULL")]
		public double Outcome31
		{
			get
			{
				return this._Outcome31;
			}
			set
			{
				if ((this._Outcome31 != value))
				{
					this.OnOutcome31Changing(value);
					this.SendPropertyChanging();
					this._Outcome31 = value;
					this.SendPropertyChanged("Outcome31");
					this.OnOutcome31Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome32", DbType="Float NOT NULL")]
		public double Outcome32
		{
			get
			{
				return this._Outcome32;
			}
			set
			{
				if ((this._Outcome32 != value))
				{
					this.OnOutcome32Changing(value);
					this.SendPropertyChanging();
					this._Outcome32 = value;
					this.SendPropertyChanged("Outcome32");
					this.OnOutcome32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome33", DbType="Float NOT NULL")]
		public double Outcome33
		{
			get
			{
				return this._Outcome33;
			}
			set
			{
				if ((this._Outcome33 != value))
				{
					this.OnOutcome33Changing(value);
					this.SendPropertyChanging();
					this._Outcome33 = value;
					this.SendPropertyChanged("Outcome33");
					this.OnOutcome33Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome3Av", DbType="Float NOT NULL")]
		public double Outcome3Av
		{
			get
			{
				return this._Outcome3Av;
			}
			set
			{
				if ((this._Outcome3Av != value))
				{
					this.OnOutcome3AvChanging(value);
					this.SendPropertyChanging();
					this._Outcome3Av = value;
					this.SendPropertyChanged("Outcome3Av");
					this.OnOutcome3AvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome41", DbType="Float NOT NULL")]
		public double Outcome41
		{
			get
			{
				return this._Outcome41;
			}
			set
			{
				if ((this._Outcome41 != value))
				{
					this.OnOutcome41Changing(value);
					this.SendPropertyChanging();
					this._Outcome41 = value;
					this.SendPropertyChanged("Outcome41");
					this.OnOutcome41Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome42", DbType="Float NOT NULL")]
		public double Outcome42
		{
			get
			{
				return this._Outcome42;
			}
			set
			{
				if ((this._Outcome42 != value))
				{
					this.OnOutcome42Changing(value);
					this.SendPropertyChanging();
					this._Outcome42 = value;
					this.SendPropertyChanged("Outcome42");
					this.OnOutcome42Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome43", DbType="Float NOT NULL")]
		public double Outcome43
		{
			get
			{
				return this._Outcome43;
			}
			set
			{
				if ((this._Outcome43 != value))
				{
					this.OnOutcome43Changing(value);
					this.SendPropertyChanging();
					this._Outcome43 = value;
					this.SendPropertyChanged("Outcome43");
					this.OnOutcome43Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome4Av", DbType="Float NOT NULL")]
		public double Outcome4Av
		{
			get
			{
				return this._Outcome4Av;
			}
			set
			{
				if ((this._Outcome4Av != value))
				{
					this.OnOutcome4AvChanging(value);
					this.SendPropertyChanging();
					this._Outcome4Av = value;
					this.SendPropertyChanged("Outcome4Av");
					this.OnOutcome4AvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOutcome1", DbType="Float NOT NULL")]
		public double TotalOutcome1
		{
			get
			{
				return this._TotalOutcome1;
			}
			set
			{
				if ((this._TotalOutcome1 != value))
				{
					this.OnTotalOutcome1Changing(value);
					this.SendPropertyChanging();
					this._TotalOutcome1 = value;
					this.SendPropertyChanged("TotalOutcome1");
					this.OnTotalOutcome1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOutcome2", DbType="Float NOT NULL")]
		public double TotalOutcome2
		{
			get
			{
				return this._TotalOutcome2;
			}
			set
			{
				if ((this._TotalOutcome2 != value))
				{
					this.OnTotalOutcome2Changing(value);
					this.SendPropertyChanging();
					this._TotalOutcome2 = value;
					this.SendPropertyChanged("TotalOutcome2");
					this.OnTotalOutcome2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOutcome3", DbType="Float NOT NULL")]
		public double TotalOutcome3
		{
			get
			{
				return this._TotalOutcome3;
			}
			set
			{
				if ((this._TotalOutcome3 != value))
				{
					this.OnTotalOutcome3Changing(value);
					this.SendPropertyChanging();
					this._TotalOutcome3 = value;
					this.SendPropertyChanged("TotalOutcome3");
					this.OnTotalOutcome3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOutcomeSr", DbType="Float NOT NULL")]
		public double TotalOutcomeSr
		{
			get
			{
				return this._TotalOutcomeSr;
			}
			set
			{
				if ((this._TotalOutcomeSr != value))
				{
					this.OnTotalOutcomeSrChanging(value);
					this.SendPropertyChanging();
					this._TotalOutcomeSr = value;
					this.SendPropertyChanged("TotalOutcomeSr");
					this.OnTotalOutcomeSrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetIncome1", DbType="Float NOT NULL")]
		public double TotalNetIncome1
		{
			get
			{
				return this._TotalNetIncome1;
			}
			set
			{
				if ((this._TotalNetIncome1 != value))
				{
					this.OnTotalNetIncome1Changing(value);
					this.SendPropertyChanging();
					this._TotalNetIncome1 = value;
					this.SendPropertyChanged("TotalNetIncome1");
					this.OnTotalNetIncome1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetIncome2", DbType="Float NOT NULL")]
		public double TotalNetIncome2
		{
			get
			{
				return this._TotalNetIncome2;
			}
			set
			{
				if ((this._TotalNetIncome2 != value))
				{
					this.OnTotalNetIncome2Changing(value);
					this.SendPropertyChanging();
					this._TotalNetIncome2 = value;
					this.SendPropertyChanged("TotalNetIncome2");
					this.OnTotalNetIncome2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetIncome3", DbType="Float NOT NULL")]
		public double TotalNetIncome3
		{
			get
			{
				return this._TotalNetIncome3;
			}
			set
			{
				if ((this._TotalNetIncome3 != value))
				{
					this.OnTotalNetIncome3Changing(value);
					this.SendPropertyChanging();
					this._TotalNetIncome3 = value;
					this.SendPropertyChanged("TotalNetIncome3");
					this.OnTotalNetIncome3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetIncomeAv", DbType="Float NOT NULL")]
		public double TotalNetIncomeAv
		{
			get
			{
				return this._TotalNetIncomeAv;
			}
			set
			{
				if ((this._TotalNetIncomeAv != value))
				{
					this.OnTotalNetIncomeAvChanging(value);
					this.SendPropertyChanging();
					this._TotalNetIncomeAv = value;
					this.SendPropertyChanged("TotalNetIncomeAv");
					this.OnTotalNetIncomeAvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_FinData", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.FinDatas.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.FinDatas.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klass")]
	public partial class Klass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Klass1;
		
		private EntitySet<KlassHistory> _KlassHistories;
		
		private EntitySet<Ocenka> _Ocenkas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKlass1Changing(string value);
    partial void OnKlass1Changed();
    #endregion
		
		public Klass()
		{
			this._KlassHistories = new EntitySet<KlassHistory>(new Action<KlassHistory>(this.attach_KlassHistories), new Action<KlassHistory>(this.detach_KlassHistories));
			this._Ocenkas = new EntitySet<Ocenka>(new Action<Ocenka>(this.attach_Ocenkas), new Action<Ocenka>(this.detach_Ocenkas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Klass", Storage="_Klass1", DbType="NVarChar(255)")]
		public string Klass1
		{
			get
			{
				return this._Klass1;
			}
			set
			{
				if ((this._Klass1 != value))
				{
					this.OnKlass1Changing(value);
					this.SendPropertyChanging();
					this._Klass1 = value;
					this.SendPropertyChanged("Klass1");
					this.OnKlass1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klass_KlassHistory", Storage="_KlassHistories", ThisKey="ID", OtherKey="Klass")]
		public EntitySet<KlassHistory> KlassHistories
		{
			get
			{
				return this._KlassHistories;
			}
			set
			{
				this._KlassHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klass_Ocenka", Storage="_Ocenkas", ThisKey="ID", OtherKey="IdCategoryOfBorrower")]
		public EntitySet<Ocenka> Ocenkas
		{
			get
			{
				return this._Ocenkas;
			}
			set
			{
				this._Ocenkas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KlassHistories(KlassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Klass1 = this;
		}
		
		private void detach_KlassHistories(KlassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Klass1 = null;
		}
		
		private void attach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Klass = this;
		}
		
		private void detach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Klass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KlassHistory")]
	public partial class KlassHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private System.DateTime _DataOcenki;
		
		private int _Klass;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Klass> _Klass1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnDataOcenkiChanging(System.DateTime value);
    partial void OnDataOcenkiChanged();
    partial void OnKlassChanging(int value);
    partial void OnKlassChanged();
    #endregion
		
		public KlassHistory()
		{
			this._Client = default(EntityRef<Client>);
			this._Klass1 = default(EntityRef<Klass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOcenki", DbType="DateTime NOT NULL")]
		public System.DateTime DataOcenki
		{
			get
			{
				return this._DataOcenki;
			}
			set
			{
				if ((this._DataOcenki != value))
				{
					this.OnDataOcenkiChanging(value);
					this.SendPropertyChanging();
					this._DataOcenki = value;
					this.SendPropertyChanged("DataOcenki");
					this.OnDataOcenkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klass", DbType="Int NOT NULL")]
		public int Klass
		{
			get
			{
				return this._Klass;
			}
			set
			{
				if ((this._Klass != value))
				{
					if (this._Klass1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlassChanging(value);
					this.SendPropertyChanging();
					this._Klass = value;
					this.SendPropertyChanged("Klass");
					this.OnKlassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_KlassHistory", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.KlassHistories.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.KlassHistories.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klass_KlassHistory", Storage="_Klass1", ThisKey="Klass", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Klass Klass1
		{
			get
			{
				return this._Klass1.Entity;
			}
			set
			{
				Klass previousValue = this._Klass1.Entity;
				if (((previousValue != value) 
							|| (this._Klass1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klass1.Entity = null;
						previousValue.KlassHistories.Remove(this);
					}
					this._Klass1.Entity = value;
					if ((value != null))
					{
						value.KlassHistories.Add(this);
						this._Klass = value.ID;
					}
					else
					{
						this._Klass = default(int);
					}
					this.SendPropertyChanged("Klass1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LevelOfSequrity")]
	public partial class LevelOfSequrity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public LevelOfSequrity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentCurrentCredits")]
	public partial class PaymentCurrentCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public PaymentCurrentCredit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purpose")]
	public partial class Purpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
		private EntitySet<TermOfLoan> _TermOfLoans;
		
		private EntitySet<Credit> _Credits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public Purpose()
		{
			this._TermOfLoans = new EntitySet<TermOfLoan>(new Action<TermOfLoan>(this.attach_TermOfLoans), new Action<TermOfLoan>(this.detach_TermOfLoans));
			this._Credits = new EntitySet<Credit>(new Action<Credit>(this.attach_Credits), new Action<Credit>(this.detach_Credits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_TermOfLoan", Storage="_TermOfLoans", ThisKey="ID", OtherKey="IdPurpose")]
		public EntitySet<TermOfLoan> TermOfLoans
		{
			get
			{
				return this._TermOfLoans;
			}
			set
			{
				this._TermOfLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_Credit", Storage="_Credits", ThisKey="ID", OtherKey="Purpose")]
		public EntitySet<Credit> Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				this._Credits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TermOfLoans(TermOfLoan entity)
		{
			this.SendPropertyChanging();
			entity.Purpose = this;
		}
		
		private void detach_TermOfLoans(TermOfLoan entity)
		{
			this.SendPropertyChanging();
			entity.Purpose = null;
		}
		
		private void attach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Purpose1 = this;
		}
		
		private void detach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Purpose1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatioLoanPaymentToNetIncome")]
	public partial class RatioLoanPaymentToNetIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public RatioLoanPaymentToNetIncome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReputationOfBorrower")]
	public partial class ReputationOfBorrower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public ReputationOfBorrower()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public Salary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sequrity")]
	public partial class Sequrity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
		private EntitySet<Credit> _Credits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public Sequrity()
		{
			this._Credits = new EntitySet<Credit>(new Action<Credit>(this.attach_Credits), new Action<Credit>(this.detach_Credits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sequrity_Credit", Storage="_Credits", ThisKey="ID", OtherKey="KindOfSequrity")]
		public EntitySet<Credit> Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				this._Credits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Sequrity1 = this;
		}
		
		private void detach_Credits(Credit entity)
		{
			this.SendPropertyChanging();
			entity.Sequrity1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TermOfLoan")]
	public partial class TermOfLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IdPurpose;
		
		private string _Description;
		
		private int _Mark;
		
		private EntityRef<Purpose> _Purpose;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIdPurposeChanging(int value);
    partial void OnIdPurposeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public TermOfLoan()
		{
			this._Purpose = default(EntityRef<Purpose>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPurpose", DbType="Int NOT NULL")]
		public int IdPurpose
		{
			get
			{
				return this._IdPurpose;
			}
			set
			{
				if ((this._IdPurpose != value))
				{
					if (this._Purpose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPurposeChanging(value);
					this.SendPropertyChanging();
					this._IdPurpose = value;
					this.SendPropertyChanged("IdPurpose");
					this.OnIdPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_TermOfLoan", Storage="_Purpose", ThisKey="IdPurpose", OtherKey="ID", IsForeignKey=true)]
		public Purpose Purpose
		{
			get
			{
				return this._Purpose.Entity;
			}
			set
			{
				Purpose previousValue = this._Purpose.Entity;
				if (((previousValue != value) 
							|| (this._Purpose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purpose.Entity = null;
						previousValue.TermOfLoans.Remove(this);
					}
					this._Purpose.Entity = value;
					if ((value != null))
					{
						value.TermOfLoans.Add(this);
						this._IdPurpose = value.ID;
					}
					else
					{
						this._IdPurpose = default(int);
					}
					this.SendPropertyChanged("Purpose");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TotalFamilyIncome")]
	public partial class TotalFamilyIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    #endregion
		
		public TotalFamilyIncome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Password;
		
		private string _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Credit")]
	public partial class Credit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private int _Purpose;
		
		private double _Summa;
		
		private double _SummaEq;
		
		private string _Valuta;
		
		private double _Exchage;
		
		private double _Stavka;
		
		private int _Term;
		
		private double _Sequrity;
		
		private string _SequrityDescription;
		
		private int _KindOfSequrity;
		
		private double _SummaSeqForDial;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Purpose> _Purpose1;
		
		private EntityRef<Sequrity> _Sequrity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnPurposeChanging(int value);
    partial void OnPurposeChanged();
    partial void OnSummaChanging(double value);
    partial void OnSummaChanged();
    partial void OnSummaEqChanging(double value);
    partial void OnSummaEqChanged();
    partial void OnValutaChanging(string value);
    partial void OnValutaChanged();
    partial void OnExchageChanging(double value);
    partial void OnExchageChanged();
    partial void OnStavkaChanging(double value);
    partial void OnStavkaChanged();
    partial void OnTermChanging(int value);
    partial void OnTermChanged();
    partial void OnSequrityChanging(double value);
    partial void OnSequrityChanged();
    partial void OnSequrityDescriptionChanging(string value);
    partial void OnSequrityDescriptionChanged();
    partial void OnKindOfSequrityChanging(int value);
    partial void OnKindOfSequrityChanged();
    partial void OnSummaSeqForDialChanging(double value);
    partial void OnSummaSeqForDialChanged();
    #endregion
		
		public Credit()
		{
			this._Client = default(EntityRef<Client>);
			this._Purpose1 = default(EntityRef<Purpose>);
			this._Sequrity1 = default(EntityRef<Sequrity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="Int NOT NULL")]
		public int Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					if (this._Purpose1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summa", DbType="Float NOT NULL")]
		public double Summa
		{
			get
			{
				return this._Summa;
			}
			set
			{
				if ((this._Summa != value))
				{
					this.OnSummaChanging(value);
					this.SendPropertyChanging();
					this._Summa = value;
					this.SendPropertyChanged("Summa");
					this.OnSummaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaEq", DbType="Float NOT NULL")]
		public double SummaEq
		{
			get
			{
				return this._SummaEq;
			}
			set
			{
				if ((this._SummaEq != value))
				{
					this.OnSummaEqChanging(value);
					this.SendPropertyChanging();
					this._SummaEq = value;
					this.SendPropertyChanged("SummaEq");
					this.OnSummaEqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valuta", DbType="NVarChar(5)")]
		public string Valuta
		{
			get
			{
				return this._Valuta;
			}
			set
			{
				if ((this._Valuta != value))
				{
					this.OnValutaChanging(value);
					this.SendPropertyChanging();
					this._Valuta = value;
					this.SendPropertyChanged("Valuta");
					this.OnValutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchage", DbType="Float NOT NULL")]
		public double Exchage
		{
			get
			{
				return this._Exchage;
			}
			set
			{
				if ((this._Exchage != value))
				{
					this.OnExchageChanging(value);
					this.SendPropertyChanging();
					this._Exchage = value;
					this.SendPropertyChanged("Exchage");
					this.OnExchageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stavka", DbType="Float NOT NULL")]
		public double Stavka
		{
			get
			{
				return this._Stavka;
			}
			set
			{
				if ((this._Stavka != value))
				{
					this.OnStavkaChanging(value);
					this.SendPropertyChanging();
					this._Stavka = value;
					this.SendPropertyChanged("Stavka");
					this.OnStavkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int NOT NULL")]
		public int Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequrity", DbType="Float NOT NULL")]
		public double Sequrity
		{
			get
			{
				return this._Sequrity;
			}
			set
			{
				if ((this._Sequrity != value))
				{
					this.OnSequrityChanging(value);
					this.SendPropertyChanging();
					this._Sequrity = value;
					this.SendPropertyChanged("Sequrity");
					this.OnSequrityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequrityDescription", DbType="NVarChar(255)")]
		public string SequrityDescription
		{
			get
			{
				return this._SequrityDescription;
			}
			set
			{
				if ((this._SequrityDescription != value))
				{
					this.OnSequrityDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SequrityDescription = value;
					this.SendPropertyChanged("SequrityDescription");
					this.OnSequrityDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindOfSequrity", DbType="Int NOT NULL")]
		public int KindOfSequrity
		{
			get
			{
				return this._KindOfSequrity;
			}
			set
			{
				if ((this._KindOfSequrity != value))
				{
					if (this._Sequrity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKindOfSequrityChanging(value);
					this.SendPropertyChanging();
					this._KindOfSequrity = value;
					this.SendPropertyChanged("KindOfSequrity");
					this.OnKindOfSequrityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaSeqForDial", DbType="Float NOT NULL")]
		public double SummaSeqForDial
		{
			get
			{
				return this._SummaSeqForDial;
			}
			set
			{
				if ((this._SummaSeqForDial != value))
				{
					this.OnSummaSeqForDialChanging(value);
					this.SendPropertyChanging();
					this._SummaSeqForDial = value;
					this.SendPropertyChanged("SummaSeqForDial");
					this.OnSummaSeqForDialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Credit", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Credits.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Credits.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_Credit", Storage="_Purpose1", ThisKey="Purpose", OtherKey="ID", IsForeignKey=true)]
		public Purpose Purpose1
		{
			get
			{
				return this._Purpose1.Entity;
			}
			set
			{
				Purpose previousValue = this._Purpose1.Entity;
				if (((previousValue != value) 
							|| (this._Purpose1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purpose1.Entity = null;
						previousValue.Credits.Remove(this);
					}
					this._Purpose1.Entity = value;
					if ((value != null))
					{
						value.Credits.Add(this);
						this._Purpose = value.ID;
					}
					else
					{
						this._Purpose = default(int);
					}
					this.SendPropertyChanged("Purpose1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sequrity_Credit", Storage="_Sequrity1", ThisKey="KindOfSequrity", OtherKey="ID", IsForeignKey=true)]
		public Sequrity Sequrity1
		{
			get
			{
				return this._Sequrity1.Entity;
			}
			set
			{
				Sequrity previousValue = this._Sequrity1.Entity;
				if (((previousValue != value) 
							|| (this._Sequrity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sequrity1.Entity = null;
						previousValue.Credits.Remove(this);
					}
					this._Sequrity1.Entity = value;
					if ((value != null))
					{
						value.Credits.Add(this);
						this._KindOfSequrity = value.ID;
					}
					else
					{
						this._KindOfSequrity = default(int);
					}
					this.SendPropertyChanged("Sequrity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValueExchange")]
	public partial class ValueExchange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private double _Excahnge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExcahngeChanging(double value);
    partial void OnExcahngeChanged();
    #endregion
		
		public ValueExchange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excahnge", DbType="Float NOT NULL")]
		public double Excahnge
		{
			get
			{
				return this._Excahnge;
			}
			set
			{
				if ((this._Excahnge != value))
				{
					this.OnExcahngeChanging(value);
					this.SendPropertyChanging();
					this._Excahnge = value;
					this.SendPropertyChanged("Excahnge");
					this.OnExcahngeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ocenka")]
	public partial class Ocenka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientId;
		
		private System.DateTime _DateOfOcenki;
		
		private int _IdCategoryOfBorrower;
		
		private string _PurposeDescription;
		
		private string _SequrityDescription;
		
		private string _TermOfLoanDescription;
		
		private string _SalaryDescription;
		
		private string _TotalFamilyIncomeDescription;
		
		private string _RatioLoanPaymentToNetIncomeDescription;
		
		private string _ExistanceOfDepositeDescription;
		
		private string _LevelOfSequrityDescription;
		
		private string _FinConditionOfBorrowersFamilyDescription;
		
		private string _ExpirienceAtLastPlaceOfWorkDescription;
		
		private string _ReputationOfBorrowerDescription;
		
		private string _FamilyCompositionDescription;
		
		private string _AgeOfBorrowerDescription;
		
		private string _CreditHistoryDescription;
		
		private string _PaymentCurrentCreditDescription;
		
		private string _ByuroeCreditHistoryDescription;
		
		private int _TotalMark;
		
		private EntityRef<Klass> _Klass;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnDateOfOcenkiChanging(System.DateTime value);
    partial void OnDateOfOcenkiChanged();
    partial void OnIdCategoryOfBorrowerChanging(int value);
    partial void OnIdCategoryOfBorrowerChanged();
    partial void OnPurposeDescriptionChanging(string value);
    partial void OnPurposeDescriptionChanged();
    partial void OnSequrityDescriptionChanging(string value);
    partial void OnSequrityDescriptionChanged();
    partial void OnTermOfLoanDescriptionChanging(string value);
    partial void OnTermOfLoanDescriptionChanged();
    partial void OnSalaryDescriptionChanging(string value);
    partial void OnSalaryDescriptionChanged();
    partial void OnTotalFamilyIncomeDescriptionChanging(string value);
    partial void OnTotalFamilyIncomeDescriptionChanged();
    partial void OnRatioLoanPaymentToNetIncomeDescriptionChanging(string value);
    partial void OnRatioLoanPaymentToNetIncomeDescriptionChanged();
    partial void OnExistanceOfDepositeDescriptionChanging(string value);
    partial void OnExistanceOfDepositeDescriptionChanged();
    partial void OnLevelOfSequrityDescriptionChanging(string value);
    partial void OnLevelOfSequrityDescriptionChanged();
    partial void OnFinConditionOfBorrowersFamilyDescriptionChanging(string value);
    partial void OnFinConditionOfBorrowersFamilyDescriptionChanged();
    partial void OnExpirienceAtLastPlaceOfWorkDescriptionChanging(string value);
    partial void OnExpirienceAtLastPlaceOfWorkDescriptionChanged();
    partial void OnReputationOfBorrowerDescriptionChanging(string value);
    partial void OnReputationOfBorrowerDescriptionChanged();
    partial void OnFamilyCompositionDescriptionChanging(string value);
    partial void OnFamilyCompositionDescriptionChanged();
    partial void OnAgeOfBorrowerDescriptionChanging(string value);
    partial void OnAgeOfBorrowerDescriptionChanged();
    partial void OnCreditHistoryDescriptionChanging(string value);
    partial void OnCreditHistoryDescriptionChanged();
    partial void OnPaymentCurrentCreditDescriptionChanging(string value);
    partial void OnPaymentCurrentCreditDescriptionChanged();
    partial void OnByuroeCreditHistoryDescriptionChanging(string value);
    partial void OnByuroeCreditHistoryDescriptionChanged();
    partial void OnTotalMarkChanging(int value);
    partial void OnTotalMarkChanged();
    #endregion
		
		public Ocenka()
		{
			this._Klass = default(EntityRef<Klass>);
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfOcenki", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfOcenki
		{
			get
			{
				return this._DateOfOcenki;
			}
			set
			{
				if ((this._DateOfOcenki != value))
				{
					this.OnDateOfOcenkiChanging(value);
					this.SendPropertyChanging();
					this._DateOfOcenki = value;
					this.SendPropertyChanged("DateOfOcenki");
					this.OnDateOfOcenkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoryOfBorrower", DbType="Int NOT NULL")]
		public int IdCategoryOfBorrower
		{
			get
			{
				return this._IdCategoryOfBorrower;
			}
			set
			{
				if ((this._IdCategoryOfBorrower != value))
				{
					if (this._Klass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoryOfBorrowerChanging(value);
					this.SendPropertyChanging();
					this._IdCategoryOfBorrower = value;
					this.SendPropertyChanged("IdCategoryOfBorrower");
					this.OnIdCategoryOfBorrowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PurposeDescription
		{
			get
			{
				return this._PurposeDescription;
			}
			set
			{
				if ((this._PurposeDescription != value))
				{
					this.OnPurposeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PurposeDescription = value;
					this.SendPropertyChanged("PurposeDescription");
					this.OnPurposeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequrityDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SequrityDescription
		{
			get
			{
				return this._SequrityDescription;
			}
			set
			{
				if ((this._SequrityDescription != value))
				{
					this.OnSequrityDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SequrityDescription = value;
					this.SendPropertyChanged("SequrityDescription");
					this.OnSequrityDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermOfLoanDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TermOfLoanDescription
		{
			get
			{
				return this._TermOfLoanDescription;
			}
			set
			{
				if ((this._TermOfLoanDescription != value))
				{
					this.OnTermOfLoanDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TermOfLoanDescription = value;
					this.SendPropertyChanged("TermOfLoanDescription");
					this.OnTermOfLoanDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SalaryDescription
		{
			get
			{
				return this._SalaryDescription;
			}
			set
			{
				if ((this._SalaryDescription != value))
				{
					this.OnSalaryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SalaryDescription = value;
					this.SendPropertyChanged("SalaryDescription");
					this.OnSalaryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFamilyIncomeDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TotalFamilyIncomeDescription
		{
			get
			{
				return this._TotalFamilyIncomeDescription;
			}
			set
			{
				if ((this._TotalFamilyIncomeDescription != value))
				{
					this.OnTotalFamilyIncomeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TotalFamilyIncomeDescription = value;
					this.SendPropertyChanged("TotalFamilyIncomeDescription");
					this.OnTotalFamilyIncomeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioLoanPaymentToNetIncomeDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RatioLoanPaymentToNetIncomeDescription
		{
			get
			{
				return this._RatioLoanPaymentToNetIncomeDescription;
			}
			set
			{
				if ((this._RatioLoanPaymentToNetIncomeDescription != value))
				{
					this.OnRatioLoanPaymentToNetIncomeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RatioLoanPaymentToNetIncomeDescription = value;
					this.SendPropertyChanged("RatioLoanPaymentToNetIncomeDescription");
					this.OnRatioLoanPaymentToNetIncomeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistanceOfDepositeDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExistanceOfDepositeDescription
		{
			get
			{
				return this._ExistanceOfDepositeDescription;
			}
			set
			{
				if ((this._ExistanceOfDepositeDescription != value))
				{
					this.OnExistanceOfDepositeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExistanceOfDepositeDescription = value;
					this.SendPropertyChanged("ExistanceOfDepositeDescription");
					this.OnExistanceOfDepositeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelOfSequrityDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LevelOfSequrityDescription
		{
			get
			{
				return this._LevelOfSequrityDescription;
			}
			set
			{
				if ((this._LevelOfSequrityDescription != value))
				{
					this.OnLevelOfSequrityDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LevelOfSequrityDescription = value;
					this.SendPropertyChanged("LevelOfSequrityDescription");
					this.OnLevelOfSequrityDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinConditionOfBorrowersFamilyDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FinConditionOfBorrowersFamilyDescription
		{
			get
			{
				return this._FinConditionOfBorrowersFamilyDescription;
			}
			set
			{
				if ((this._FinConditionOfBorrowersFamilyDescription != value))
				{
					this.OnFinConditionOfBorrowersFamilyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FinConditionOfBorrowersFamilyDescription = value;
					this.SendPropertyChanged("FinConditionOfBorrowersFamilyDescription");
					this.OnFinConditionOfBorrowersFamilyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirienceAtLastPlaceOfWorkDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExpirienceAtLastPlaceOfWorkDescription
		{
			get
			{
				return this._ExpirienceAtLastPlaceOfWorkDescription;
			}
			set
			{
				if ((this._ExpirienceAtLastPlaceOfWorkDescription != value))
				{
					this.OnExpirienceAtLastPlaceOfWorkDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExpirienceAtLastPlaceOfWorkDescription = value;
					this.SendPropertyChanged("ExpirienceAtLastPlaceOfWorkDescription");
					this.OnExpirienceAtLastPlaceOfWorkDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReputationOfBorrowerDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReputationOfBorrowerDescription
		{
			get
			{
				return this._ReputationOfBorrowerDescription;
			}
			set
			{
				if ((this._ReputationOfBorrowerDescription != value))
				{
					this.OnReputationOfBorrowerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReputationOfBorrowerDescription = value;
					this.SendPropertyChanged("ReputationOfBorrowerDescription");
					this.OnReputationOfBorrowerDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyCompositionDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FamilyCompositionDescription
		{
			get
			{
				return this._FamilyCompositionDescription;
			}
			set
			{
				if ((this._FamilyCompositionDescription != value))
				{
					this.OnFamilyCompositionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FamilyCompositionDescription = value;
					this.SendPropertyChanged("FamilyCompositionDescription");
					this.OnFamilyCompositionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeOfBorrowerDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AgeOfBorrowerDescription
		{
			get
			{
				return this._AgeOfBorrowerDescription;
			}
			set
			{
				if ((this._AgeOfBorrowerDescription != value))
				{
					this.OnAgeOfBorrowerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AgeOfBorrowerDescription = value;
					this.SendPropertyChanged("AgeOfBorrowerDescription");
					this.OnAgeOfBorrowerDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditHistoryDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CreditHistoryDescription
		{
			get
			{
				return this._CreditHistoryDescription;
			}
			set
			{
				if ((this._CreditHistoryDescription != value))
				{
					this.OnCreditHistoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CreditHistoryDescription = value;
					this.SendPropertyChanged("CreditHistoryDescription");
					this.OnCreditHistoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCurrentCreditDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PaymentCurrentCreditDescription
		{
			get
			{
				return this._PaymentCurrentCreditDescription;
			}
			set
			{
				if ((this._PaymentCurrentCreditDescription != value))
				{
					this.OnPaymentCurrentCreditDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PaymentCurrentCreditDescription = value;
					this.SendPropertyChanged("PaymentCurrentCreditDescription");
					this.OnPaymentCurrentCreditDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ByuroeCreditHistoryDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ByuroeCreditHistoryDescription
		{
			get
			{
				return this._ByuroeCreditHistoryDescription;
			}
			set
			{
				if ((this._ByuroeCreditHistoryDescription != value))
				{
					this.OnByuroeCreditHistoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ByuroeCreditHistoryDescription = value;
					this.SendPropertyChanged("ByuroeCreditHistoryDescription");
					this.OnByuroeCreditHistoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Int NOT NULL")]
		public int TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this.OnTotalMarkChanging(value);
					this.SendPropertyChanging();
					this._TotalMark = value;
					this.SendPropertyChanged("TotalMark");
					this.OnTotalMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klass_Ocenka", Storage="_Klass", ThisKey="IdCategoryOfBorrower", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Klass Klass
		{
			get
			{
				return this._Klass.Entity;
			}
			set
			{
				Klass previousValue = this._Klass.Entity;
				if (((previousValue != value) 
							|| (this._Klass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klass.Entity = null;
						previousValue.Ocenkas.Remove(this);
					}
					this._Klass.Entity = value;
					if ((value != null))
					{
						value.Ocenkas.Add(this);
						this._IdCategoryOfBorrower = value.ID;
					}
					else
					{
						this._IdCategoryOfBorrower = default(int);
					}
					this.SendPropertyChanged("Klass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Ocenka", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Ocenkas.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Ocenkas.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
